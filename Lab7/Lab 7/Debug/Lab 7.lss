
Lab 7.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000502  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000502  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000534  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000574  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a70  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000097a  00000000  00000000  0000103c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000354  00000000  00000000  000019b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000134  00000000  00000000  00001d0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004bf  00000000  00000000  00001e40  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000023d  00000000  00000000  000022ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  0000253c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__vector_7>
  20:	0c 94 1c 01 	jmp	0x238	; 0x238 <__vector_8>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  2c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <__vector_14>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__vector_21>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_clear_bss>:
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a0 30       	cpi	r26, 0x00	; 0
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 ca 00 	call	0x194	; 0x194 <main>
  d4:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <_exit>

000000d8 <__bad_interrupt>:
  d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000dc <timer0_initialization>:
DUTY cycle frequency = (8+1) * 100Hz = 900Hz / 1.11ms for OCR2A
Y mod 6 = channel 2
*/

void timer0_initialization() {
	TCCR0A |= (1<<WGM01); //CTC mode
  dc:	84 b5       	in	r24, 0x24	; 36
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	84 bd       	out	0x24, r24	; 36
	OCR0A = 249; //Using ps = 256, 4m / (250-1) 
  e2:	89 ef       	ldi	r24, 0xF9	; 249
  e4:	87 bd       	out	0x27, r24	; 39
	TCCR0B |= (1<<CS02); //Pre-scaler = 256
  e6:	85 b5       	in	r24, 0x25	; 37
  e8:	84 60       	ori	r24, 0x04	; 4
  ea:	85 bd       	out	0x25, r24	; 37
	TIMSK0 |= (1<<OCIE0A); //Enabling compare match A Interrupt for timer 0
  ec:	ee e6       	ldi	r30, 0x6E	; 110
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	80 81       	ld	r24, Z
  f2:	82 60       	ori	r24, 0x02	; 2
  f4:	80 83       	st	Z, r24
  f6:	08 95       	ret

000000f8 <timer2_initialization>:
}

void timer2_initialization(uint16_t variable) {
  f8:	cf 92       	push	r12
  fa:	df 92       	push	r13
  fc:	ef 92       	push	r14
  fe:	ff 92       	push	r15
 100:	cf 93       	push	r28
	TCCR2A |= (1<<WGM21); //CTC mode
 102:	e0 eb       	ldi	r30, 0xB0	; 176
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	20 81       	ld	r18, Z
 108:	22 60       	ori	r18, 0x02	; 2
 10a:	20 83       	st	Z, r18
	OCR2A = 69; //Using PS = 256, 1.11ms/ (69.375 - 1) then rounded to 69
 10c:	e3 eb       	ldi	r30, 0xB3	; 179
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	25 e4       	ldi	r18, 0x45	; 69
 112:	20 83       	st	Z, r18
	OCR2B = OCR2A * (variable/1024.00); //calculating OCR2B
 114:	c0 81       	ld	r28, Z
 116:	bc 01       	movw	r22, r24
 118:	80 e0       	ldi	r24, 0x00	; 0
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <__floatunsisf>
 120:	20 e0       	ldi	r18, 0x00	; 0
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	40 e8       	ldi	r20, 0x80	; 128
 126:	5a e3       	ldi	r21, 0x3A	; 58
 128:	0e 94 c0 01 	call	0x380	; 0x380 <__mulsf3>
 12c:	6b 01       	movw	r12, r22
 12e:	7c 01       	movw	r14, r24
 130:	6c 2f       	mov	r22, r28
 132:	70 e0       	ldi	r23, 0x00	; 0
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <__floatsisf>
 13c:	a7 01       	movw	r20, r14
 13e:	96 01       	movw	r18, r12
 140:	0e 94 c0 01 	call	0x380	; 0x380 <__mulsf3>
 144:	0e 94 2b 01 	call	0x256	; 0x256 <__fixunssfsi>
 148:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	TCCR2B |= (1<<CS22) ; //PS = 256
 14c:	e1 eb       	ldi	r30, 0xB1	; 177
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	84 60       	ori	r24, 0x04	; 4
 154:	80 83       	st	Z, r24
	TIMSK2 |= (1<<OCIE2A) | (1<<OCIE2B); //Enabling compare match A & B Interrupts
 156:	e0 e7       	ldi	r30, 0x70	; 112
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	86 60       	ori	r24, 0x06	; 6
 15e:	80 83       	st	Z, r24
}
 160:	cf 91       	pop	r28
 162:	ff 90       	pop	r15
 164:	ef 90       	pop	r14
 166:	df 90       	pop	r13
 168:	cf 90       	pop	r12
 16a:	08 95       	ret

0000016c <adc_init>:

void adc_init(void){
	ADMUX &= 0b00010000; //Clearing all bits except for the reserved one
 16c:	ec e7       	ldi	r30, 0x7C	; 124
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	80 81       	ld	r24, Z
 172:	80 71       	andi	r24, 0x10	; 16
 174:	80 83       	st	Z, r24
	DDRB |= (1<<DDB5); //Set LED as output
 176:	84 b1       	in	r24, 0x04	; 4
 178:	80 62       	ori	r24, 0x20	; 32
 17a:	84 b9       	out	0x04, r24	; 4
	DDRC &= ~(1<<PINC2); //Setting input at PORTC pin 2
 17c:	87 b1       	in	r24, 0x07	; 7
 17e:	8b 7f       	andi	r24, 0xFB	; 251
 180:	87 b9       	out	0x07, r24	; 7
	ADMUX |= 0b01000001; //Setting VCC reference and ADC1
 182:	80 81       	ld	r24, Z
 184:	81 64       	ori	r24, 0x41	; 65
 186:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN) | (1<<ADIE) | (1<<ADPS1) | (1<<ADPS2) | (1<<ADPS0); //Enable ADC
 188:	ea e7       	ldi	r30, 0x7A	; 122
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	80 81       	ld	r24, Z
 18e:	8f 68       	ori	r24, 0x8F	; 143
 190:	80 83       	st	Z, r24
 192:	08 95       	ret

00000194 <main>:
}

uint16_t variable = 0;
int main(void)
{
	timer0_initialization();
 194:	0e 94 6e 00 	call	0xdc	; 0xdc <timer0_initialization>
	adc_init();
 198:	0e 94 b6 00 	call	0x16c	; 0x16c <adc_init>
	sei(); //enable global interrupt
 19c:	78 94       	sei
 19e:	ff cf       	rjmp	.-2      	; 0x19e <main+0xa>

000001a0 <__vector_14>:
	/* Replace with your application code */
	while(1)
	{
	}
}
ISR (TIMER0_COMPA_vect){
 1a0:	1f 92       	push	r1
 1a2:	0f 92       	push	r0
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	0f 92       	push	r0
 1a8:	11 24       	eor	r1, r1
 1aa:	8f 93       	push	r24
 1ac:	ef 93       	push	r30
 1ae:	ff 93       	push	r31
	ADCSRA |= (1<<ADSC); //Timer 0 overflow occurs, start conversion
 1b0:	ea e7       	ldi	r30, 0x7A	; 122
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	80 64       	ori	r24, 0x40	; 64
 1b8:	80 83       	st	Z, r24
}
 1ba:	ff 91       	pop	r31
 1bc:	ef 91       	pop	r30
 1be:	8f 91       	pop	r24
 1c0:	0f 90       	pop	r0
 1c2:	0f be       	out	0x3f, r0	; 63
 1c4:	0f 90       	pop	r0
 1c6:	1f 90       	pop	r1
 1c8:	18 95       	reti

000001ca <__vector_21>:

ISR (ADC_vect){
 1ca:	1f 92       	push	r1
 1cc:	0f 92       	push	r0
 1ce:	0f b6       	in	r0, 0x3f	; 63
 1d0:	0f 92       	push	r0
 1d2:	11 24       	eor	r1, r1
 1d4:	2f 93       	push	r18
 1d6:	3f 93       	push	r19
 1d8:	4f 93       	push	r20
 1da:	5f 93       	push	r21
 1dc:	6f 93       	push	r22
 1de:	7f 93       	push	r23
 1e0:	8f 93       	push	r24
 1e2:	9f 93       	push	r25
 1e4:	af 93       	push	r26
 1e6:	bf 93       	push	r27
 1e8:	ef 93       	push	r30
 1ea:	ff 93       	push	r31
	uint16_t variable = ADC; //ADC Conversion Complete, save result to variable
 1ec:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1f0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
	timer2_initialization(variable); //Pass result to timer2_initialization() function
 1f4:	0e 94 7c 00 	call	0xf8	; 0xf8 <timer2_initialization>
}
 1f8:	ff 91       	pop	r31
 1fa:	ef 91       	pop	r30
 1fc:	bf 91       	pop	r27
 1fe:	af 91       	pop	r26
 200:	9f 91       	pop	r25
 202:	8f 91       	pop	r24
 204:	7f 91       	pop	r23
 206:	6f 91       	pop	r22
 208:	5f 91       	pop	r21
 20a:	4f 91       	pop	r20
 20c:	3f 91       	pop	r19
 20e:	2f 91       	pop	r18
 210:	0f 90       	pop	r0
 212:	0f be       	out	0x3f, r0	; 63
 214:	0f 90       	pop	r0
 216:	1f 90       	pop	r1
 218:	18 95       	reti

0000021a <__vector_7>:

ISR(TIMER2_COMPA_vect){
 21a:	1f 92       	push	r1
 21c:	0f 92       	push	r0
 21e:	0f b6       	in	r0, 0x3f	; 63
 220:	0f 92       	push	r0
 222:	11 24       	eor	r1, r1
 224:	8f 93       	push	r24
	LEDON;
 226:	85 b1       	in	r24, 0x05	; 5
 228:	80 62       	ori	r24, 0x20	; 32
 22a:	85 b9       	out	0x05, r24	; 5
}
 22c:	8f 91       	pop	r24
 22e:	0f 90       	pop	r0
 230:	0f be       	out	0x3f, r0	; 63
 232:	0f 90       	pop	r0
 234:	1f 90       	pop	r1
 236:	18 95       	reti

00000238 <__vector_8>:

ISR (TIMER2_COMPB_vect){
 238:	1f 92       	push	r1
 23a:	0f 92       	push	r0
 23c:	0f b6       	in	r0, 0x3f	; 63
 23e:	0f 92       	push	r0
 240:	11 24       	eor	r1, r1
 242:	8f 93       	push	r24
	LEDOFF;
 244:	85 b1       	in	r24, 0x05	; 5
 246:	8f 7d       	andi	r24, 0xDF	; 223
 248:	85 b9       	out	0x05, r24	; 5
}
 24a:	8f 91       	pop	r24
 24c:	0f 90       	pop	r0
 24e:	0f be       	out	0x3f, r0	; 63
 250:	0f 90       	pop	r0
 252:	1f 90       	pop	r1
 254:	18 95       	reti

00000256 <__fixunssfsi>:
 256:	0e 94 9f 01 	call	0x33e	; 0x33e <__fp_splitA>
 25a:	88 f0       	brcs	.+34     	; 0x27e <__fixunssfsi+0x28>
 25c:	9f 57       	subi	r25, 0x7F	; 127
 25e:	98 f0       	brcs	.+38     	; 0x286 <__fixunssfsi+0x30>
 260:	b9 2f       	mov	r27, r25
 262:	99 27       	eor	r25, r25
 264:	b7 51       	subi	r27, 0x17	; 23
 266:	b0 f0       	brcs	.+44     	; 0x294 <__fixunssfsi+0x3e>
 268:	e1 f0       	breq	.+56     	; 0x2a2 <__fixunssfsi+0x4c>
 26a:	66 0f       	add	r22, r22
 26c:	77 1f       	adc	r23, r23
 26e:	88 1f       	adc	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	1a f0       	brmi	.+6      	; 0x27a <__fixunssfsi+0x24>
 274:	ba 95       	dec	r27
 276:	c9 f7       	brne	.-14     	; 0x26a <__fixunssfsi+0x14>
 278:	14 c0       	rjmp	.+40     	; 0x2a2 <__fixunssfsi+0x4c>
 27a:	b1 30       	cpi	r27, 0x01	; 1
 27c:	91 f0       	breq	.+36     	; 0x2a2 <__fixunssfsi+0x4c>
 27e:	0e 94 b9 01 	call	0x372	; 0x372 <__fp_zero>
 282:	b1 e0       	ldi	r27, 0x01	; 1
 284:	08 95       	ret
 286:	0c 94 b9 01 	jmp	0x372	; 0x372 <__fp_zero>
 28a:	67 2f       	mov	r22, r23
 28c:	78 2f       	mov	r23, r24
 28e:	88 27       	eor	r24, r24
 290:	b8 5f       	subi	r27, 0xF8	; 248
 292:	39 f0       	breq	.+14     	; 0x2a2 <__fixunssfsi+0x4c>
 294:	b9 3f       	cpi	r27, 0xF9	; 249
 296:	cc f3       	brlt	.-14     	; 0x28a <__fixunssfsi+0x34>
 298:	86 95       	lsr	r24
 29a:	77 95       	ror	r23
 29c:	67 95       	ror	r22
 29e:	b3 95       	inc	r27
 2a0:	d9 f7       	brne	.-10     	; 0x298 <__fixunssfsi+0x42>
 2a2:	3e f4       	brtc	.+14     	; 0x2b2 <__fixunssfsi+0x5c>
 2a4:	90 95       	com	r25
 2a6:	80 95       	com	r24
 2a8:	70 95       	com	r23
 2aa:	61 95       	neg	r22
 2ac:	7f 4f       	sbci	r23, 0xFF	; 255
 2ae:	8f 4f       	sbci	r24, 0xFF	; 255
 2b0:	9f 4f       	sbci	r25, 0xFF	; 255
 2b2:	08 95       	ret

000002b4 <__floatunsisf>:
 2b4:	e8 94       	clt
 2b6:	09 c0       	rjmp	.+18     	; 0x2ca <__floatsisf+0x12>

000002b8 <__floatsisf>:
 2b8:	97 fb       	bst	r25, 7
 2ba:	3e f4       	brtc	.+14     	; 0x2ca <__floatsisf+0x12>
 2bc:	90 95       	com	r25
 2be:	80 95       	com	r24
 2c0:	70 95       	com	r23
 2c2:	61 95       	neg	r22
 2c4:	7f 4f       	sbci	r23, 0xFF	; 255
 2c6:	8f 4f       	sbci	r24, 0xFF	; 255
 2c8:	9f 4f       	sbci	r25, 0xFF	; 255
 2ca:	99 23       	and	r25, r25
 2cc:	a9 f0       	breq	.+42     	; 0x2f8 <__floatsisf+0x40>
 2ce:	f9 2f       	mov	r31, r25
 2d0:	96 e9       	ldi	r25, 0x96	; 150
 2d2:	bb 27       	eor	r27, r27
 2d4:	93 95       	inc	r25
 2d6:	f6 95       	lsr	r31
 2d8:	87 95       	ror	r24
 2da:	77 95       	ror	r23
 2dc:	67 95       	ror	r22
 2de:	b7 95       	ror	r27
 2e0:	f1 11       	cpse	r31, r1
 2e2:	f8 cf       	rjmp	.-16     	; 0x2d4 <__floatsisf+0x1c>
 2e4:	fa f4       	brpl	.+62     	; 0x324 <__floatsisf+0x6c>
 2e6:	bb 0f       	add	r27, r27
 2e8:	11 f4       	brne	.+4      	; 0x2ee <__floatsisf+0x36>
 2ea:	60 ff       	sbrs	r22, 0
 2ec:	1b c0       	rjmp	.+54     	; 0x324 <__floatsisf+0x6c>
 2ee:	6f 5f       	subi	r22, 0xFF	; 255
 2f0:	7f 4f       	sbci	r23, 0xFF	; 255
 2f2:	8f 4f       	sbci	r24, 0xFF	; 255
 2f4:	9f 4f       	sbci	r25, 0xFF	; 255
 2f6:	16 c0       	rjmp	.+44     	; 0x324 <__floatsisf+0x6c>
 2f8:	88 23       	and	r24, r24
 2fa:	11 f0       	breq	.+4      	; 0x300 <__floatsisf+0x48>
 2fc:	96 e9       	ldi	r25, 0x96	; 150
 2fe:	11 c0       	rjmp	.+34     	; 0x322 <__floatsisf+0x6a>
 300:	77 23       	and	r23, r23
 302:	21 f0       	breq	.+8      	; 0x30c <__floatsisf+0x54>
 304:	9e e8       	ldi	r25, 0x8E	; 142
 306:	87 2f       	mov	r24, r23
 308:	76 2f       	mov	r23, r22
 30a:	05 c0       	rjmp	.+10     	; 0x316 <__floatsisf+0x5e>
 30c:	66 23       	and	r22, r22
 30e:	71 f0       	breq	.+28     	; 0x32c <__floatsisf+0x74>
 310:	96 e8       	ldi	r25, 0x86	; 134
 312:	86 2f       	mov	r24, r22
 314:	70 e0       	ldi	r23, 0x00	; 0
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	2a f0       	brmi	.+10     	; 0x324 <__floatsisf+0x6c>
 31a:	9a 95       	dec	r25
 31c:	66 0f       	add	r22, r22
 31e:	77 1f       	adc	r23, r23
 320:	88 1f       	adc	r24, r24
 322:	da f7       	brpl	.-10     	; 0x31a <__floatsisf+0x62>
 324:	88 0f       	add	r24, r24
 326:	96 95       	lsr	r25
 328:	87 95       	ror	r24
 32a:	97 f9       	bld	r25, 7
 32c:	08 95       	ret

0000032e <__fp_split3>:
 32e:	57 fd       	sbrc	r21, 7
 330:	90 58       	subi	r25, 0x80	; 128
 332:	44 0f       	add	r20, r20
 334:	55 1f       	adc	r21, r21
 336:	59 f0       	breq	.+22     	; 0x34e <__fp_splitA+0x10>
 338:	5f 3f       	cpi	r21, 0xFF	; 255
 33a:	71 f0       	breq	.+28     	; 0x358 <__fp_splitA+0x1a>
 33c:	47 95       	ror	r20

0000033e <__fp_splitA>:
 33e:	88 0f       	add	r24, r24
 340:	97 fb       	bst	r25, 7
 342:	99 1f       	adc	r25, r25
 344:	61 f0       	breq	.+24     	; 0x35e <__fp_splitA+0x20>
 346:	9f 3f       	cpi	r25, 0xFF	; 255
 348:	79 f0       	breq	.+30     	; 0x368 <__fp_splitA+0x2a>
 34a:	87 95       	ror	r24
 34c:	08 95       	ret
 34e:	12 16       	cp	r1, r18
 350:	13 06       	cpc	r1, r19
 352:	14 06       	cpc	r1, r20
 354:	55 1f       	adc	r21, r21
 356:	f2 cf       	rjmp	.-28     	; 0x33c <__fp_split3+0xe>
 358:	46 95       	lsr	r20
 35a:	f1 df       	rcall	.-30     	; 0x33e <__fp_splitA>
 35c:	08 c0       	rjmp	.+16     	; 0x36e <__fp_splitA+0x30>
 35e:	16 16       	cp	r1, r22
 360:	17 06       	cpc	r1, r23
 362:	18 06       	cpc	r1, r24
 364:	99 1f       	adc	r25, r25
 366:	f1 cf       	rjmp	.-30     	; 0x34a <__fp_splitA+0xc>
 368:	86 95       	lsr	r24
 36a:	71 05       	cpc	r23, r1
 36c:	61 05       	cpc	r22, r1
 36e:	08 94       	sec
 370:	08 95       	ret

00000372 <__fp_zero>:
 372:	e8 94       	clt

00000374 <__fp_szero>:
 374:	bb 27       	eor	r27, r27
 376:	66 27       	eor	r22, r22
 378:	77 27       	eor	r23, r23
 37a:	cb 01       	movw	r24, r22
 37c:	97 f9       	bld	r25, 7
 37e:	08 95       	ret

00000380 <__mulsf3>:
 380:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__mulsf3x>
 384:	0c 94 44 02 	jmp	0x488	; 0x488 <__fp_round>
 388:	0e 94 36 02 	call	0x46c	; 0x46c <__fp_pscA>
 38c:	38 f0       	brcs	.+14     	; 0x39c <__mulsf3+0x1c>
 38e:	0e 94 3d 02 	call	0x47a	; 0x47a <__fp_pscB>
 392:	20 f0       	brcs	.+8      	; 0x39c <__mulsf3+0x1c>
 394:	95 23       	and	r25, r21
 396:	11 f0       	breq	.+4      	; 0x39c <__mulsf3+0x1c>
 398:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__fp_inf>
 39c:	0c 94 33 02 	jmp	0x466	; 0x466 <__fp_nan>
 3a0:	11 24       	eor	r1, r1
 3a2:	0c 94 ba 01 	jmp	0x374	; 0x374 <__fp_szero>

000003a6 <__mulsf3x>:
 3a6:	0e 94 97 01 	call	0x32e	; 0x32e <__fp_split3>
 3aa:	70 f3       	brcs	.-36     	; 0x388 <__mulsf3+0x8>

000003ac <__mulsf3_pse>:
 3ac:	95 9f       	mul	r25, r21
 3ae:	c1 f3       	breq	.-16     	; 0x3a0 <__mulsf3+0x20>
 3b0:	95 0f       	add	r25, r21
 3b2:	50 e0       	ldi	r21, 0x00	; 0
 3b4:	55 1f       	adc	r21, r21
 3b6:	62 9f       	mul	r22, r18
 3b8:	f0 01       	movw	r30, r0
 3ba:	72 9f       	mul	r23, r18
 3bc:	bb 27       	eor	r27, r27
 3be:	f0 0d       	add	r31, r0
 3c0:	b1 1d       	adc	r27, r1
 3c2:	63 9f       	mul	r22, r19
 3c4:	aa 27       	eor	r26, r26
 3c6:	f0 0d       	add	r31, r0
 3c8:	b1 1d       	adc	r27, r1
 3ca:	aa 1f       	adc	r26, r26
 3cc:	64 9f       	mul	r22, r20
 3ce:	66 27       	eor	r22, r22
 3d0:	b0 0d       	add	r27, r0
 3d2:	a1 1d       	adc	r26, r1
 3d4:	66 1f       	adc	r22, r22
 3d6:	82 9f       	mul	r24, r18
 3d8:	22 27       	eor	r18, r18
 3da:	b0 0d       	add	r27, r0
 3dc:	a1 1d       	adc	r26, r1
 3de:	62 1f       	adc	r22, r18
 3e0:	73 9f       	mul	r23, r19
 3e2:	b0 0d       	add	r27, r0
 3e4:	a1 1d       	adc	r26, r1
 3e6:	62 1f       	adc	r22, r18
 3e8:	83 9f       	mul	r24, r19
 3ea:	a0 0d       	add	r26, r0
 3ec:	61 1d       	adc	r22, r1
 3ee:	22 1f       	adc	r18, r18
 3f0:	74 9f       	mul	r23, r20
 3f2:	33 27       	eor	r19, r19
 3f4:	a0 0d       	add	r26, r0
 3f6:	61 1d       	adc	r22, r1
 3f8:	23 1f       	adc	r18, r19
 3fa:	84 9f       	mul	r24, r20
 3fc:	60 0d       	add	r22, r0
 3fe:	21 1d       	adc	r18, r1
 400:	82 2f       	mov	r24, r18
 402:	76 2f       	mov	r23, r22
 404:	6a 2f       	mov	r22, r26
 406:	11 24       	eor	r1, r1
 408:	9f 57       	subi	r25, 0x7F	; 127
 40a:	50 40       	sbci	r21, 0x00	; 0
 40c:	9a f0       	brmi	.+38     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 40e:	f1 f0       	breq	.+60     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 410:	88 23       	and	r24, r24
 412:	4a f0       	brmi	.+18     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 414:	ee 0f       	add	r30, r30
 416:	ff 1f       	adc	r31, r31
 418:	bb 1f       	adc	r27, r27
 41a:	66 1f       	adc	r22, r22
 41c:	77 1f       	adc	r23, r23
 41e:	88 1f       	adc	r24, r24
 420:	91 50       	subi	r25, 0x01	; 1
 422:	50 40       	sbci	r21, 0x00	; 0
 424:	a9 f7       	brne	.-22     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 426:	9e 3f       	cpi	r25, 0xFE	; 254
 428:	51 05       	cpc	r21, r1
 42a:	80 f0       	brcs	.+32     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 42c:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__fp_inf>
 430:	0c 94 ba 01 	jmp	0x374	; 0x374 <__fp_szero>
 434:	5f 3f       	cpi	r21, 0xFF	; 255
 436:	e4 f3       	brlt	.-8      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 438:	98 3e       	cpi	r25, 0xE8	; 232
 43a:	d4 f3       	brlt	.-12     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 43c:	86 95       	lsr	r24
 43e:	77 95       	ror	r23
 440:	67 95       	ror	r22
 442:	b7 95       	ror	r27
 444:	f7 95       	ror	r31
 446:	e7 95       	ror	r30
 448:	9f 5f       	subi	r25, 0xFF	; 255
 44a:	c1 f7       	brne	.-16     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
 44c:	fe 2b       	or	r31, r30
 44e:	88 0f       	add	r24, r24
 450:	91 1d       	adc	r25, r1
 452:	96 95       	lsr	r25
 454:	87 95       	ror	r24
 456:	97 f9       	bld	r25, 7
 458:	08 95       	ret

0000045a <__fp_inf>:
 45a:	97 f9       	bld	r25, 7
 45c:	9f 67       	ori	r25, 0x7F	; 127
 45e:	80 e8       	ldi	r24, 0x80	; 128
 460:	70 e0       	ldi	r23, 0x00	; 0
 462:	60 e0       	ldi	r22, 0x00	; 0
 464:	08 95       	ret

00000466 <__fp_nan>:
 466:	9f ef       	ldi	r25, 0xFF	; 255
 468:	80 ec       	ldi	r24, 0xC0	; 192
 46a:	08 95       	ret

0000046c <__fp_pscA>:
 46c:	00 24       	eor	r0, r0
 46e:	0a 94       	dec	r0
 470:	16 16       	cp	r1, r22
 472:	17 06       	cpc	r1, r23
 474:	18 06       	cpc	r1, r24
 476:	09 06       	cpc	r0, r25
 478:	08 95       	ret

0000047a <__fp_pscB>:
 47a:	00 24       	eor	r0, r0
 47c:	0a 94       	dec	r0
 47e:	12 16       	cp	r1, r18
 480:	13 06       	cpc	r1, r19
 482:	14 06       	cpc	r1, r20
 484:	05 06       	cpc	r0, r21
 486:	08 95       	ret

00000488 <__fp_round>:
 488:	09 2e       	mov	r0, r25
 48a:	03 94       	inc	r0
 48c:	00 0c       	add	r0, r0
 48e:	11 f4       	brne	.+4      	; 0x494 <__fp_round+0xc>
 490:	88 23       	and	r24, r24
 492:	52 f0       	brmi	.+20     	; 0x4a8 <__fp_round+0x20>
 494:	bb 0f       	add	r27, r27
 496:	40 f4       	brcc	.+16     	; 0x4a8 <__fp_round+0x20>
 498:	bf 2b       	or	r27, r31
 49a:	11 f4       	brne	.+4      	; 0x4a0 <__fp_round+0x18>
 49c:	60 ff       	sbrs	r22, 0
 49e:	04 c0       	rjmp	.+8      	; 0x4a8 <__fp_round+0x20>
 4a0:	6f 5f       	subi	r22, 0xFF	; 255
 4a2:	7f 4f       	sbci	r23, 0xFF	; 255
 4a4:	8f 4f       	sbci	r24, 0xFF	; 255
 4a6:	9f 4f       	sbci	r25, 0xFF	; 255
 4a8:	08 95       	ret

000004aa <_exit>:
 4aa:	f8 94       	cli

000004ac <__stop_program>:
 4ac:	ff cf       	rjmp	.-2      	; 0x4ac <__stop_program>
