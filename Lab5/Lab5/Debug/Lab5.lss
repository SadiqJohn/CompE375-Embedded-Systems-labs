
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  000004b0  00000524  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004b0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000574  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000005b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aba  00000000  00000000  000005ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009b5  00000000  00000000  000010a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000358  00000000  00000000  00001a5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000006c  00000000  00000000  00001db4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000480  00000000  00000000  00001e20  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000133  00000000  00000000  000022a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000023d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
   c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  10:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  14:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  18:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  20:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  24:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  28:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  2c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  30:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  34:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  38:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  3c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  40:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  44:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  48:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  4c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  50:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  54:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  58:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  5c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  60:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  64:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  68:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  6c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  70:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  74:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  78:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  7c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  80:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  84:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  88:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  8c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  90:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  94:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  98:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  9c:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a4:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  a8:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  ac:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>
  b0:	0c 94 6f 00 	jmp	0xde	; 0xde <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e0 eb       	ldi	r30, 0xB0	; 176
  c8:	f4 e0       	ldi	r31, 0x04	; 4
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 32       	cpi	r26, 0x20	; 32
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>
  d6:	0e 94 ce 00 	call	0x19c	; 0x19c <main>
  da:	0c 94 56 02 	jmp	0x4ac	; 0x4ac <_exit>

000000de <__bad_interrupt>:
  de:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e2 <keypad_init>:
	}
}

void keypad_init(void)
{
	DDRD |= ((1 << 4) | (1 << 5) | (1 << 6) | (1 << 7));
  e2:	8a b1       	in	r24, 0x0a	; 10
  e4:	80 6f       	ori	r24, 0xF0	; 240
  e6:	8a b9       	out	0x0a, r24	; 10
	DDRB &= ~(1 << 0) & ~(1 << 1) & ~(1 << 2) & ~(1 << 3);
  e8:	84 b1       	in	r24, 0x04	; 4
  ea:	80 7f       	andi	r24, 0xF0	; 240
  ec:	84 b9       	out	0x04, r24	; 4
	PORTB |= ((1 << 0) | (1 << 1) | (1 << 2) | (1 << 3));
  ee:	85 b1       	in	r24, 0x05	; 5
  f0:	8f 60       	ori	r24, 0x0F	; 15
  f2:	85 b9       	out	0x05, r24	; 5
	PORTD |= (1<<4|1<<5|1<<6|1<<7);
  f4:	8b b1       	in	r24, 0x0b	; 11
  f6:	80 6f       	ori	r24, 0xF0	; 240
  f8:	8b b9       	out	0x0b, r24	; 11
	DDRD |= (1 << 1);
  fa:	8a b1       	in	r24, 0x0a	; 10
  fc:	82 60       	ori	r24, 0x02	; 2
  fe:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << PORTB5);
 100:	84 b1       	in	r24, 0x04	; 4
 102:	80 62       	ori	r24, 0x20	; 32
 104:	84 b9       	out	0x04, r24	; 4
 106:	08 95       	ret

00000108 <timer_init>:
}

void timer_init(int freq)
{
 108:	bc 01       	movw	r22, r24
	TCCR0A |= (1 << WGM01); //ctc
 10a:	84 b5       	in	r24, 0x24	; 36
 10c:	82 60       	ori	r24, 0x02	; 2
 10e:	84 bd       	out	0x24, r24	; 36
	OCR0A = freq;
 110:	67 bd       	out	0x27, r22	; 39
	OCR0B = freq * 0.5;
 112:	07 2e       	mov	r0, r23
 114:	00 0c       	add	r0, r0
 116:	88 0b       	sbc	r24, r24
 118:	99 0b       	sbc	r25, r25
 11a:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__floatsisf>
 11e:	20 e0       	ldi	r18, 0x00	; 0
 120:	30 e0       	ldi	r19, 0x00	; 0
 122:	40 e0       	ldi	r20, 0x00	; 0
 124:	5f e3       	ldi	r21, 0x3F	; 63
 126:	0e 94 c1 01 	call	0x382	; 0x382 <__mulsf3>
 12a:	0e 94 2c 01 	call	0x258	; 0x258 <__fixunssfsi>
 12e:	68 bd       	out	0x28, r22	; 40
	TCCR0B |= (1 << CS02); //ps 256
 130:	85 b5       	in	r24, 0x25	; 37
 132:	84 60       	ori	r24, 0x04	; 4
 134:	85 bd       	out	0x25, r24	; 37
 136:	08 95       	ret

00000138 <keypad_note>:
#include <util/delay.h>
#define F_CPU 16000000UL


void keypad_note(int freq, int a)
{
 138:	cf 93       	push	r28
 13a:	c6 2f       	mov	r28, r22
	timer_init(freq);
 13c:	0e 94 84 00 	call	0x108	; 0x108 <timer_init>
	while (!(PINB & (1<<a)))
 140:	21 c0       	rjmp	.+66     	; 0x184 <keypad_note+0x4c>
	{
		while((TIFR0 & (1 << OCF0B)) == 0 )
		{
			PORTD |= (1 << 1);
 142:	8b b1       	in	r24, 0x0b	; 11
 144:	82 60       	ori	r24, 0x02	; 2
 146:	8b b9       	out	0x0b, r24	; 11
void keypad_note(int freq, int a)
{
	timer_init(freq);
	while (!(PINB & (1<<a)))
	{
		while((TIFR0 & (1 << OCF0B)) == 0 )
 148:	aa 9b       	sbis	0x15, 2	; 21
 14a:	fb cf       	rjmp	.-10     	; 0x142 <keypad_note+0xa>
		{
			PORTD |= (1 << 1);
		}
		TIFR0 |= (1 << OCR0B);
 14c:	28 b5       	in	r18, 0x28	; 40
 14e:	81 e0       	ldi	r24, 0x01	; 1
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	02 c0       	rjmp	.+4      	; 0x158 <keypad_note+0x20>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	2a 95       	dec	r18
 15a:	e2 f7       	brpl	.-8      	; 0x154 <keypad_note+0x1c>
 15c:	95 b3       	in	r25, 0x15	; 21
 15e:	89 2b       	or	r24, r25
 160:	85 bb       	out	0x15, r24	; 21
		
		while((TIFR0 & (1 << OCF0A)) == 0)
 162:	03 c0       	rjmp	.+6      	; 0x16a <keypad_note+0x32>
		{
			PORTD &= ~ (1 << OCF0A);
 164:	8b b1       	in	r24, 0x0b	; 11
 166:	8d 7f       	andi	r24, 0xFD	; 253
 168:	8b b9       	out	0x0b, r24	; 11
		{
			PORTD |= (1 << 1);
		}
		TIFR0 |= (1 << OCR0B);
		
		while((TIFR0 & (1 << OCF0A)) == 0)
 16a:	a9 9b       	sbis	0x15, 1	; 21
 16c:	fb cf       	rjmp	.-10     	; 0x164 <keypad_note+0x2c>
		{
			PORTD &= ~ (1 << OCF0A);
		}
		TIFR0 |= (1 << OCR0A);
 16e:	27 b5       	in	r18, 0x27	; 39
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <keypad_note+0x42>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	2a 95       	dec	r18
 17c:	e2 f7       	brpl	.-8      	; 0x176 <keypad_note+0x3e>
 17e:	95 b3       	in	r25, 0x15	; 21
 180:	89 2b       	or	r24, r25
 182:	85 bb       	out	0x15, r24	; 21


void keypad_note(int freq, int a)
{
	timer_init(freq);
	while (!(PINB & (1<<a)))
 184:	83 b1       	in	r24, 0x03	; 3
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	0c 2e       	mov	r0, r28
 18a:	02 c0       	rjmp	.+4      	; 0x190 <keypad_note+0x58>
 18c:	95 95       	asr	r25
 18e:	87 95       	ror	r24
 190:	0a 94       	dec	r0
 192:	e2 f7       	brpl	.-8      	; 0x18c <keypad_note+0x54>
 194:	80 ff       	sbrs	r24, 0
 196:	d8 cf       	rjmp	.-80     	; 0x148 <keypad_note+0x10>
		{
			PORTD &= ~ (1 << OCF0A);
		}
		TIFR0 |= (1 << OCR0A);
	}
}
 198:	cf 91       	pop	r28
 19a:	08 95       	ret

0000019c <main>:
}



int main(void)
{
 19c:	cf 93       	push	r28
 19e:	df 93       	push	r29
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	a0 97       	sbiw	r28, 0x20	; 32
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	f8 94       	cli
 1aa:	de bf       	out	0x3e, r29	; 62
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	cd bf       	out	0x3d, r28	; 61
	keypad_init();
 1b0:	0e 94 71 00 	call	0xe2	; 0xe2 <keypad_init>
	const int keypad[4][4] = {{141,133,126,119},
 1b4:	80 e2       	ldi	r24, 0x20	; 32
 1b6:	e0 e0       	ldi	r30, 0x00	; 0
 1b8:	f1 e0       	ldi	r31, 0x01	; 1
 1ba:	de 01       	movw	r26, r28
 1bc:	11 96       	adiw	r26, 0x01	; 1
 1be:	01 90       	ld	r0, Z+
 1c0:	0d 92       	st	X+, r0
 1c2:	8a 95       	dec	r24
 1c4:	e1 f7       	brne	.-8      	; 0x1be <main+0x22>
							{112,105,99,94},
							{88,83,79,74},
							{70,66,62,59}};
	while(1)
	{
		for (int row = 4; row <= 7; row++)
 1c6:	68 94       	set
 1c8:	cc 24       	eor	r12, r12
 1ca:	c2 f8       	bld	r12, 2
 1cc:	d1 2c       	mov	r13, r1
 1ce:	3e c0       	rjmp	.+124    	; 0x24c <main+0xb0>
		{
			PORTD &= ~(1<<row);
 1d0:	8b b1       	in	r24, 0x0b	; 11
 1d2:	21 e0       	ldi	r18, 0x01	; 1
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	79 01       	movw	r14, r18
 1d8:	0c 2c       	mov	r0, r12
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <main+0x44>
 1dc:	ee 0c       	add	r14, r14
 1de:	ff 1c       	adc	r15, r15
 1e0:	0a 94       	dec	r0
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <main+0x40>
 1e4:	9e 2d       	mov	r25, r14
 1e6:	90 95       	com	r25
 1e8:	89 23       	and	r24, r25
 1ea:	8b b9       	out	0x0b, r24	; 11
			for (int col = 0; col <= 3; col++)
 1ec:	00 e0       	ldi	r16, 0x00	; 0
 1ee:	10 e0       	ldi	r17, 0x00	; 0
 1f0:	24 c0       	rjmp	.+72     	; 0x23a <main+0x9e>
			{
				if(!(PINB & (1<<col)))
 1f2:	83 b1       	in	r24, 0x03	; 3
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	00 2e       	mov	r0, r16
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <main+0x62>
 1fa:	95 95       	asr	r25
 1fc:	87 95       	ror	r24
 1fe:	0a 94       	dec	r0
 200:	e2 f7       	brpl	.-8      	; 0x1fa <main+0x5e>
 202:	80 fd       	sbrc	r24, 0
 204:	15 c0       	rjmp	.+42     	; 0x230 <main+0x94>
				{
					keypad_note(keypad[row-4][col],col);
 206:	f6 01       	movw	r30, r12
 208:	34 97       	sbiw	r30, 0x04	; 4
 20a:	ee 0f       	add	r30, r30
 20c:	ff 1f       	adc	r31, r31
 20e:	ee 0f       	add	r30, r30
 210:	ff 1f       	adc	r31, r31
 212:	e0 0f       	add	r30, r16
 214:	f1 1f       	adc	r31, r17
 216:	ee 0f       	add	r30, r30
 218:	ff 1f       	adc	r31, r31
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	8c 0f       	add	r24, r28
 220:	9d 1f       	adc	r25, r29
 222:	e8 0f       	add	r30, r24
 224:	f9 1f       	adc	r31, r25
 226:	b8 01       	movw	r22, r16
 228:	80 81       	ld	r24, Z
 22a:	91 81       	ldd	r25, Z+1	; 0x01
 22c:	0e 94 9c 00 	call	0x138	; 0x138 <keypad_note>
				}
				PORTB |= (1<<0|1<<1|1<<2|1<<3);
 230:	85 b1       	in	r24, 0x05	; 5
 232:	8f 60       	ori	r24, 0x0F	; 15
 234:	85 b9       	out	0x05, r24	; 5
	while(1)
	{
		for (int row = 4; row <= 7; row++)
		{
			PORTD &= ~(1<<row);
			for (int col = 0; col <= 3; col++)
 236:	0f 5f       	subi	r16, 0xFF	; 255
 238:	1f 4f       	sbci	r17, 0xFF	; 255
 23a:	04 30       	cpi	r16, 0x04	; 4
 23c:	11 05       	cpc	r17, r1
 23e:	cc f2       	brlt	.-78     	; 0x1f2 <main+0x56>
				{
					keypad_note(keypad[row-4][col],col);
				}
				PORTB |= (1<<0|1<<1|1<<2|1<<3);
			}
			PORTD |= (1<<row);
 240:	8b b1       	in	r24, 0x0b	; 11
 242:	e8 2a       	or	r14, r24
 244:	eb b8       	out	0x0b, r14	; 11
							{112,105,99,94},
							{88,83,79,74},
							{70,66,62,59}};
	while(1)
	{
		for (int row = 4; row <= 7; row++)
 246:	9f ef       	ldi	r25, 0xFF	; 255
 248:	c9 1a       	sub	r12, r25
 24a:	d9 0a       	sbc	r13, r25
 24c:	88 e0       	ldi	r24, 0x08	; 8
 24e:	c8 16       	cp	r12, r24
 250:	d1 04       	cpc	r13, r1
 252:	0c f4       	brge	.+2      	; 0x256 <main+0xba>
 254:	bd cf       	rjmp	.-134    	; 0x1d0 <main+0x34>
 256:	b7 cf       	rjmp	.-146    	; 0x1c6 <main+0x2a>

00000258 <__fixunssfsi>:
 258:	0e 94 a0 01 	call	0x340	; 0x340 <__fp_splitA>
 25c:	88 f0       	brcs	.+34     	; 0x280 <__fixunssfsi+0x28>
 25e:	9f 57       	subi	r25, 0x7F	; 127
 260:	98 f0       	brcs	.+38     	; 0x288 <__fixunssfsi+0x30>
 262:	b9 2f       	mov	r27, r25
 264:	99 27       	eor	r25, r25
 266:	b7 51       	subi	r27, 0x17	; 23
 268:	b0 f0       	brcs	.+44     	; 0x296 <__fixunssfsi+0x3e>
 26a:	e1 f0       	breq	.+56     	; 0x2a4 <__fixunssfsi+0x4c>
 26c:	66 0f       	add	r22, r22
 26e:	77 1f       	adc	r23, r23
 270:	88 1f       	adc	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	1a f0       	brmi	.+6      	; 0x27c <__fixunssfsi+0x24>
 276:	ba 95       	dec	r27
 278:	c9 f7       	brne	.-14     	; 0x26c <__fixunssfsi+0x14>
 27a:	14 c0       	rjmp	.+40     	; 0x2a4 <__fixunssfsi+0x4c>
 27c:	b1 30       	cpi	r27, 0x01	; 1
 27e:	91 f0       	breq	.+36     	; 0x2a4 <__fixunssfsi+0x4c>
 280:	0e 94 ba 01 	call	0x374	; 0x374 <__fp_zero>
 284:	b1 e0       	ldi	r27, 0x01	; 1
 286:	08 95       	ret
 288:	0c 94 ba 01 	jmp	0x374	; 0x374 <__fp_zero>
 28c:	67 2f       	mov	r22, r23
 28e:	78 2f       	mov	r23, r24
 290:	88 27       	eor	r24, r24
 292:	b8 5f       	subi	r27, 0xF8	; 248
 294:	39 f0       	breq	.+14     	; 0x2a4 <__fixunssfsi+0x4c>
 296:	b9 3f       	cpi	r27, 0xF9	; 249
 298:	cc f3       	brlt	.-14     	; 0x28c <__fixunssfsi+0x34>
 29a:	86 95       	lsr	r24
 29c:	77 95       	ror	r23
 29e:	67 95       	ror	r22
 2a0:	b3 95       	inc	r27
 2a2:	d9 f7       	brne	.-10     	; 0x29a <__fixunssfsi+0x42>
 2a4:	3e f4       	brtc	.+14     	; 0x2b4 <__fixunssfsi+0x5c>
 2a6:	90 95       	com	r25
 2a8:	80 95       	com	r24
 2aa:	70 95       	com	r23
 2ac:	61 95       	neg	r22
 2ae:	7f 4f       	sbci	r23, 0xFF	; 255
 2b0:	8f 4f       	sbci	r24, 0xFF	; 255
 2b2:	9f 4f       	sbci	r25, 0xFF	; 255
 2b4:	08 95       	ret

000002b6 <__floatunsisf>:
 2b6:	e8 94       	clt
 2b8:	09 c0       	rjmp	.+18     	; 0x2cc <__floatsisf+0x12>

000002ba <__floatsisf>:
 2ba:	97 fb       	bst	r25, 7
 2bc:	3e f4       	brtc	.+14     	; 0x2cc <__floatsisf+0x12>
 2be:	90 95       	com	r25
 2c0:	80 95       	com	r24
 2c2:	70 95       	com	r23
 2c4:	61 95       	neg	r22
 2c6:	7f 4f       	sbci	r23, 0xFF	; 255
 2c8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ca:	9f 4f       	sbci	r25, 0xFF	; 255
 2cc:	99 23       	and	r25, r25
 2ce:	a9 f0       	breq	.+42     	; 0x2fa <__floatsisf+0x40>
 2d0:	f9 2f       	mov	r31, r25
 2d2:	96 e9       	ldi	r25, 0x96	; 150
 2d4:	bb 27       	eor	r27, r27
 2d6:	93 95       	inc	r25
 2d8:	f6 95       	lsr	r31
 2da:	87 95       	ror	r24
 2dc:	77 95       	ror	r23
 2de:	67 95       	ror	r22
 2e0:	b7 95       	ror	r27
 2e2:	f1 11       	cpse	r31, r1
 2e4:	f8 cf       	rjmp	.-16     	; 0x2d6 <__floatsisf+0x1c>
 2e6:	fa f4       	brpl	.+62     	; 0x326 <__floatsisf+0x6c>
 2e8:	bb 0f       	add	r27, r27
 2ea:	11 f4       	brne	.+4      	; 0x2f0 <__floatsisf+0x36>
 2ec:	60 ff       	sbrs	r22, 0
 2ee:	1b c0       	rjmp	.+54     	; 0x326 <__floatsisf+0x6c>
 2f0:	6f 5f       	subi	r22, 0xFF	; 255
 2f2:	7f 4f       	sbci	r23, 0xFF	; 255
 2f4:	8f 4f       	sbci	r24, 0xFF	; 255
 2f6:	9f 4f       	sbci	r25, 0xFF	; 255
 2f8:	16 c0       	rjmp	.+44     	; 0x326 <__floatsisf+0x6c>
 2fa:	88 23       	and	r24, r24
 2fc:	11 f0       	breq	.+4      	; 0x302 <__floatsisf+0x48>
 2fe:	96 e9       	ldi	r25, 0x96	; 150
 300:	11 c0       	rjmp	.+34     	; 0x324 <__floatsisf+0x6a>
 302:	77 23       	and	r23, r23
 304:	21 f0       	breq	.+8      	; 0x30e <__floatsisf+0x54>
 306:	9e e8       	ldi	r25, 0x8E	; 142
 308:	87 2f       	mov	r24, r23
 30a:	76 2f       	mov	r23, r22
 30c:	05 c0       	rjmp	.+10     	; 0x318 <__floatsisf+0x5e>
 30e:	66 23       	and	r22, r22
 310:	71 f0       	breq	.+28     	; 0x32e <__floatsisf+0x74>
 312:	96 e8       	ldi	r25, 0x86	; 134
 314:	86 2f       	mov	r24, r22
 316:	70 e0       	ldi	r23, 0x00	; 0
 318:	60 e0       	ldi	r22, 0x00	; 0
 31a:	2a f0       	brmi	.+10     	; 0x326 <__floatsisf+0x6c>
 31c:	9a 95       	dec	r25
 31e:	66 0f       	add	r22, r22
 320:	77 1f       	adc	r23, r23
 322:	88 1f       	adc	r24, r24
 324:	da f7       	brpl	.-10     	; 0x31c <__floatsisf+0x62>
 326:	88 0f       	add	r24, r24
 328:	96 95       	lsr	r25
 32a:	87 95       	ror	r24
 32c:	97 f9       	bld	r25, 7
 32e:	08 95       	ret

00000330 <__fp_split3>:
 330:	57 fd       	sbrc	r21, 7
 332:	90 58       	subi	r25, 0x80	; 128
 334:	44 0f       	add	r20, r20
 336:	55 1f       	adc	r21, r21
 338:	59 f0       	breq	.+22     	; 0x350 <__fp_splitA+0x10>
 33a:	5f 3f       	cpi	r21, 0xFF	; 255
 33c:	71 f0       	breq	.+28     	; 0x35a <__fp_splitA+0x1a>
 33e:	47 95       	ror	r20

00000340 <__fp_splitA>:
 340:	88 0f       	add	r24, r24
 342:	97 fb       	bst	r25, 7
 344:	99 1f       	adc	r25, r25
 346:	61 f0       	breq	.+24     	; 0x360 <__fp_splitA+0x20>
 348:	9f 3f       	cpi	r25, 0xFF	; 255
 34a:	79 f0       	breq	.+30     	; 0x36a <__fp_splitA+0x2a>
 34c:	87 95       	ror	r24
 34e:	08 95       	ret
 350:	12 16       	cp	r1, r18
 352:	13 06       	cpc	r1, r19
 354:	14 06       	cpc	r1, r20
 356:	55 1f       	adc	r21, r21
 358:	f2 cf       	rjmp	.-28     	; 0x33e <__fp_split3+0xe>
 35a:	46 95       	lsr	r20
 35c:	f1 df       	rcall	.-30     	; 0x340 <__fp_splitA>
 35e:	08 c0       	rjmp	.+16     	; 0x370 <__fp_splitA+0x30>
 360:	16 16       	cp	r1, r22
 362:	17 06       	cpc	r1, r23
 364:	18 06       	cpc	r1, r24
 366:	99 1f       	adc	r25, r25
 368:	f1 cf       	rjmp	.-30     	; 0x34c <__fp_splitA+0xc>
 36a:	86 95       	lsr	r24
 36c:	71 05       	cpc	r23, r1
 36e:	61 05       	cpc	r22, r1
 370:	08 94       	sec
 372:	08 95       	ret

00000374 <__fp_zero>:
 374:	e8 94       	clt

00000376 <__fp_szero>:
 376:	bb 27       	eor	r27, r27
 378:	66 27       	eor	r22, r22
 37a:	77 27       	eor	r23, r23
 37c:	cb 01       	movw	r24, r22
 37e:	97 f9       	bld	r25, 7
 380:	08 95       	ret

00000382 <__mulsf3>:
 382:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__mulsf3x>
 386:	0c 94 45 02 	jmp	0x48a	; 0x48a <__fp_round>
 38a:	0e 94 37 02 	call	0x46e	; 0x46e <__fp_pscA>
 38e:	38 f0       	brcs	.+14     	; 0x39e <__mulsf3+0x1c>
 390:	0e 94 3e 02 	call	0x47c	; 0x47c <__fp_pscB>
 394:	20 f0       	brcs	.+8      	; 0x39e <__mulsf3+0x1c>
 396:	95 23       	and	r25, r21
 398:	11 f0       	breq	.+4      	; 0x39e <__mulsf3+0x1c>
 39a:	0c 94 2e 02 	jmp	0x45c	; 0x45c <__fp_inf>
 39e:	0c 94 34 02 	jmp	0x468	; 0x468 <__fp_nan>
 3a2:	11 24       	eor	r1, r1
 3a4:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_szero>

000003a8 <__mulsf3x>:
 3a8:	0e 94 98 01 	call	0x330	; 0x330 <__fp_split3>
 3ac:	70 f3       	brcs	.-36     	; 0x38a <__mulsf3+0x8>

000003ae <__mulsf3_pse>:
 3ae:	95 9f       	mul	r25, r21
 3b0:	c1 f3       	breq	.-16     	; 0x3a2 <__mulsf3+0x20>
 3b2:	95 0f       	add	r25, r21
 3b4:	50 e0       	ldi	r21, 0x00	; 0
 3b6:	55 1f       	adc	r21, r21
 3b8:	62 9f       	mul	r22, r18
 3ba:	f0 01       	movw	r30, r0
 3bc:	72 9f       	mul	r23, r18
 3be:	bb 27       	eor	r27, r27
 3c0:	f0 0d       	add	r31, r0
 3c2:	b1 1d       	adc	r27, r1
 3c4:	63 9f       	mul	r22, r19
 3c6:	aa 27       	eor	r26, r26
 3c8:	f0 0d       	add	r31, r0
 3ca:	b1 1d       	adc	r27, r1
 3cc:	aa 1f       	adc	r26, r26
 3ce:	64 9f       	mul	r22, r20
 3d0:	66 27       	eor	r22, r22
 3d2:	b0 0d       	add	r27, r0
 3d4:	a1 1d       	adc	r26, r1
 3d6:	66 1f       	adc	r22, r22
 3d8:	82 9f       	mul	r24, r18
 3da:	22 27       	eor	r18, r18
 3dc:	b0 0d       	add	r27, r0
 3de:	a1 1d       	adc	r26, r1
 3e0:	62 1f       	adc	r22, r18
 3e2:	73 9f       	mul	r23, r19
 3e4:	b0 0d       	add	r27, r0
 3e6:	a1 1d       	adc	r26, r1
 3e8:	62 1f       	adc	r22, r18
 3ea:	83 9f       	mul	r24, r19
 3ec:	a0 0d       	add	r26, r0
 3ee:	61 1d       	adc	r22, r1
 3f0:	22 1f       	adc	r18, r18
 3f2:	74 9f       	mul	r23, r20
 3f4:	33 27       	eor	r19, r19
 3f6:	a0 0d       	add	r26, r0
 3f8:	61 1d       	adc	r22, r1
 3fa:	23 1f       	adc	r18, r19
 3fc:	84 9f       	mul	r24, r20
 3fe:	60 0d       	add	r22, r0
 400:	21 1d       	adc	r18, r1
 402:	82 2f       	mov	r24, r18
 404:	76 2f       	mov	r23, r22
 406:	6a 2f       	mov	r22, r26
 408:	11 24       	eor	r1, r1
 40a:	9f 57       	subi	r25, 0x7F	; 127
 40c:	50 40       	sbci	r21, 0x00	; 0
 40e:	9a f0       	brmi	.+38     	; 0x436 <__EEPROM_REGION_LENGTH__+0x36>
 410:	f1 f0       	breq	.+60     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 412:	88 23       	and	r24, r24
 414:	4a f0       	brmi	.+18     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 416:	ee 0f       	add	r30, r30
 418:	ff 1f       	adc	r31, r31
 41a:	bb 1f       	adc	r27, r27
 41c:	66 1f       	adc	r22, r22
 41e:	77 1f       	adc	r23, r23
 420:	88 1f       	adc	r24, r24
 422:	91 50       	subi	r25, 0x01	; 1
 424:	50 40       	sbci	r21, 0x00	; 0
 426:	a9 f7       	brne	.-22     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 428:	9e 3f       	cpi	r25, 0xFE	; 254
 42a:	51 05       	cpc	r21, r1
 42c:	80 f0       	brcs	.+32     	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
 42e:	0c 94 2e 02 	jmp	0x45c	; 0x45c <__fp_inf>
 432:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_szero>
 436:	5f 3f       	cpi	r21, 0xFF	; 255
 438:	e4 f3       	brlt	.-8      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 43a:	98 3e       	cpi	r25, 0xE8	; 232
 43c:	d4 f3       	brlt	.-12     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 43e:	86 95       	lsr	r24
 440:	77 95       	ror	r23
 442:	67 95       	ror	r22
 444:	b7 95       	ror	r27
 446:	f7 95       	ror	r31
 448:	e7 95       	ror	r30
 44a:	9f 5f       	subi	r25, 0xFF	; 255
 44c:	c1 f7       	brne	.-16     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 44e:	fe 2b       	or	r31, r30
 450:	88 0f       	add	r24, r24
 452:	91 1d       	adc	r25, r1
 454:	96 95       	lsr	r25
 456:	87 95       	ror	r24
 458:	97 f9       	bld	r25, 7
 45a:	08 95       	ret

0000045c <__fp_inf>:
 45c:	97 f9       	bld	r25, 7
 45e:	9f 67       	ori	r25, 0x7F	; 127
 460:	80 e8       	ldi	r24, 0x80	; 128
 462:	70 e0       	ldi	r23, 0x00	; 0
 464:	60 e0       	ldi	r22, 0x00	; 0
 466:	08 95       	ret

00000468 <__fp_nan>:
 468:	9f ef       	ldi	r25, 0xFF	; 255
 46a:	80 ec       	ldi	r24, 0xC0	; 192
 46c:	08 95       	ret

0000046e <__fp_pscA>:
 46e:	00 24       	eor	r0, r0
 470:	0a 94       	dec	r0
 472:	16 16       	cp	r1, r22
 474:	17 06       	cpc	r1, r23
 476:	18 06       	cpc	r1, r24
 478:	09 06       	cpc	r0, r25
 47a:	08 95       	ret

0000047c <__fp_pscB>:
 47c:	00 24       	eor	r0, r0
 47e:	0a 94       	dec	r0
 480:	12 16       	cp	r1, r18
 482:	13 06       	cpc	r1, r19
 484:	14 06       	cpc	r1, r20
 486:	05 06       	cpc	r0, r21
 488:	08 95       	ret

0000048a <__fp_round>:
 48a:	09 2e       	mov	r0, r25
 48c:	03 94       	inc	r0
 48e:	00 0c       	add	r0, r0
 490:	11 f4       	brne	.+4      	; 0x496 <__fp_round+0xc>
 492:	88 23       	and	r24, r24
 494:	52 f0       	brmi	.+20     	; 0x4aa <__fp_round+0x20>
 496:	bb 0f       	add	r27, r27
 498:	40 f4       	brcc	.+16     	; 0x4aa <__fp_round+0x20>
 49a:	bf 2b       	or	r27, r31
 49c:	11 f4       	brne	.+4      	; 0x4a2 <__fp_round+0x18>
 49e:	60 ff       	sbrs	r22, 0
 4a0:	04 c0       	rjmp	.+8      	; 0x4aa <__fp_round+0x20>
 4a2:	6f 5f       	subi	r22, 0xFF	; 255
 4a4:	7f 4f       	sbci	r23, 0xFF	; 255
 4a6:	8f 4f       	sbci	r24, 0xFF	; 255
 4a8:	9f 4f       	sbci	r25, 0xFF	; 255
 4aa:	08 95       	ret

000004ac <_exit>:
 4ac:	f8 94       	cli

000004ae <__stop_program>:
 4ae:	ff cf       	rjmp	.-2      	; 0x4ae <__stop_program>
